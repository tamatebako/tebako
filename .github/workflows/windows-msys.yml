# Copyright (c) 2022-2024, [Ribose Inc](https://www.ribose.com).
# All rights reserved.
# This file is a part of tamatebako
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# The purpose of this workflow is to check that build procedures work correctly
# in specific environment. Due to this reason there is no caching. It is done by
# intention. All caching is in upstream projects.
#
# Also this file contains comments that will be useful is dwarfs has to be build
# in different environment, not GHA.
name: Windows-MSys

on:
  schedule:
    - cron: "0 9 * * 5"
  push:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - '**.adoc'
      - '**.md'
      - '.github/workflows/*.yml'
      - .cirrus.yml
      - '!.github/workflows/windows-msys.yml'
      - Brewfile
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**.adoc'
      - '**.md'
      - '.github/workflows/*.yml'
      - .cirrus.yml
      - '!.github/workflows/windows-msys.yml'
      - Brewfile
  workflow_dispatch:

concurrency:
  group: '${{ github.workflow }}-${{ github.job }}-${{ github.head_ref || github.ref_name }}'
  cancel-in-progress: true

env:
  CACHE_VER: 21
  VERBOSE: no

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      ruby-matrix: ${{ steps.set-matrix.outputs.ruby-matrix }}
      env-matrix: ${{ steps.set-matrix.outputs.env-matrix }}
    steps:
      - name: Checkout tebako packaging environment
        uses: actions/checkout@v4

      - name: Read test matrix from file
        id: set-matrix
        run: |
          # Determine which config to use based on event
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            prefix="tidy"
          else
            prefix="full"
          fi

          # Read and output the matrices
          ruby=$(jq -c ".$prefix.ruby" .github/matrices/windows-msys.json)
          env=$(jq -c ".$prefix.env" .github/matrices/windows-msys.json)

          echo "ruby-matrix=$ruby" >> $GITHUB_OUTPUT
          echo "env-matrix=$env" >> $GITHUB_OUTPUT
  setup:
    name: setup windows-msys [${{ matrix.env.sys }}, CC ${{ matrix.env.CC }} ]
    needs: [ prepare ]
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        env:
          - sys: ucrt64
            CC: gcc
            CXX: g++
    env: ${{ matrix.env }}

    defaults:
      run:
        shell: msys2 {0}

    steps:
      - name: Checkout tebako packaging environment
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup MSys
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.env.sys}}
          path-type: minimal
          update: true
          install: >-
            git
            tar
            bison
            flex
          pacboy: >-
            cmake:p
            boost:p
            diffutils:p
            libevent:p
            double-conversion:p
            fmt:p
            glog:p
            dlfcn:p
            ninja:p
            gtest:p
            autotools:p
            ncurses:p
            ruby:p
            toolchain:p
            openssl:p
            make:p
            libyaml:p
            libxslt:p

      - name: Enable long filenames
        run: git config --global core.longpaths true

      - name: Setup environment
        run: cat common.env >> $GITHUB_ENV

      - name: Create deps folder
        run: mkdir ${{env.DEPS}}

      - name: Setup development environment
        uses: ./.github/actions/setup-tebako-development-msys
        with:
          path: deps
          cc: ${{ env.CC }}
          version: ${{ env.CACHE_VER }}

      - name: Tebako setup
        run: exe/tebako setup -D

  tests-1:
    name: tests-1-${{ matrix.script }} windows-msys [${{ matrix.env.sys }}, Ruby ${{ matrix.package_ruby_ver }} CC ${{ matrix.env.CC }}]
    needs: [ setup, prepare ]
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        package_ruby_ver: ${{fromJson(needs.prepare.outputs.ruby-matrix)}}
        env: ${{fromJson(needs.prepare.outputs.env-matrix)}}
        script: ['bundle', 'app']
    env: ${{ matrix.env }}

    defaults:
      run:
        shell: msys2 {0}

    steps:
      - name: Checkout tebako packaging environment
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: true

      - name: Setup MSys
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.env.sys}}
          path-type: minimal
          update: true
          install: >-
            git
            tar
            bison
            flex
          pacboy: >-
            cmake:p
            boost:p
            diffutils:p
            libevent:p
            double-conversion:p
            fmt:p
            glog:p
            dlfcn:p
            ninja:p
            gtest:p
            autotools:p
            ncurses:p
            ruby:p
            toolchain:p
            openssl:p
            make:p
            libyaml:p
            libxslt:p

      - name: Enable long filenames
        run: git config --global core.longpaths true

      - name: Setup environment
        run: cat common.env >> $GITHUB_ENV

      - name: Create deps folder
        run: mkdir ${{env.DEPS}}

      - name: Setup development environment
        uses: ./.github/actions/setup-tebako-development-msys
        with:
          path: deps
          cc: ${{ env.CC }}
          version: ${{ env.CACHE_VER }}

      - name: Checkout shell test framework
        uses: actions/checkout@v4
        with:
          repository: kward/shunit2
          path: ${{github.workspace}}/tests/shunit2
          fetch-depth: 1

      - name: Run tebako tests (set no. 1)
        run: APP=${{ matrix.script }} RUBY_VER=${{ matrix.package_ruby_ver }} tests/scripts/functional-tests.sh

  tests-2:
    name: tests-2 windows-msys [${{ matrix.env.sys }}, Ruby ${{ matrix.package_ruby_ver }} CC ${{ matrix.env.CC }}]
    needs: [ setup, prepare ]
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        package_ruby_ver: ${{fromJson(needs.prepare.outputs.ruby-matrix)}}
        env: ${{fromJson(needs.prepare.outputs.env-matrix)}}
    env: ${{ matrix.env }}

    defaults:
      run:
        shell: msys2 {0}

    steps:
      - name: Checkout tebako packaging environment
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: true

      - name: Setup MSys
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.env.sys}}
          path-type: minimal
          update: true
          install: >-
            git
            tar
            bison
            flex
          pacboy: >-
            cmake:p
            boost:p
            diffutils:p
            libevent:p
            double-conversion:p
            fmt:p
            glog:p
            dlfcn:p
            ninja:p
            gtest:p
            autotools:p
            ncurses:p
            ruby:p
            toolchain:p
            openssl:p
            make:p
            libyaml:p
            libxslt:p

      - name: Enable long filenames
        run: git config --global core.longpaths true

      - name: Setup environment
        run: cat common.env >> $GITHUB_ENV

      - name: Create deps folder
        run: mkdir ${{env.DEPS}}

      - name: Setup development environment
        uses: ./.github/actions/setup-tebako-development-msys
        with:
          path: deps
          cc: ${{ env.CC }}
          version: ${{ env.CACHE_VER }}

      - name: Run tebako tests (set no. 2)
        run: RUBY_VER=${{ matrix.package_ruby_ver }} ruby tests-2/tebako-test.rb
